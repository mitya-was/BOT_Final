#!/bin/bash
# –°–∫—Ä–∏–ø—Ç —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ–≥–æ –±–æ—Ç–∞ –Ω–∞ VPS

set -e  # –ó—É–ø–∏–Ω–∫–∞ –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ

echo "üöÄ –†–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è WAS Contract Bot v2.0 –Ω–∞ VPS..."

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–≤–æ–¥—É –∑ –∫–æ–ª—å–æ—Ä–æ–º
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
check_environment() {
    print_status "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞..."
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Node.js
    if ! command -v node &> /dev/null; then
        print_error "Node.js –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!"
        exit 1
    fi
    
    NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
    if [ "$NODE_VERSION" -lt 16 ]; then
        print_error "–ü–æ—Ç—Ä—ñ–±–Ω–∞ –≤–µ—Ä—Å—ñ—è Node.js >= 16. –ü–æ—Ç–æ—á–Ω–∞: $(node -v)"
        exit 1
    fi
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ npm
    if ! command -v npm &> /dev/null; then
        print_error "npm –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!"
        exit 1
    fi
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ PM2
    if ! command -v pm2 &> /dev/null; then
        print_warning "PM2 –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –í—Å—Ç–∞–Ω–æ–≤–ª—é—é..."
        npm install -g pm2
    fi
    
    print_success "–°–µ—Ä–µ–¥–æ–≤–∏—â–µ –≥–æ—Ç–æ–≤–µ"
}

# –†–µ–∑–µ—Ä–≤–Ω–µ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è
backup_old_version() {
    print_status "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó..."
    
    if [ -d "telegram-bot-backup" ]; then
        rm -rf telegram-bot-backup
    fi
    
    if [ -d "telegram-bot" ]; then
        cp -r telegram-bot telegram-bot-backup
        print_success "–†–µ–∑–µ—Ä–≤–Ω–∞ –∫–æ–ø—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–∞: telegram-bot-backup/"
    fi
}

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
install_dependencies() {
    print_status "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
    
    cd telegram-bot
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–∞–ø–∫–∏ –¥–ª—è –ª–æ–≥—ñ–≤
    mkdir -p logs
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞–∫–µ—Ç—ñ–≤
    npm install
    
    print_success "–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ"
}

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è .env
setup_environment() {
    print_status "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞..."
    
    if [ ! -f ".env" ]; then
        print_warning ".env —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ —î backup –∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ—ó –≤–µ—Ä—Å—ñ—ó
        if [ -f "../../telegram-bot-backup-v1/.env" ]; then
            print_status "–ö–æ–ø—ñ—é—é .env –∑ backup –≤–µ—Ä—Å—ñ—ó..."
            cp ../../telegram-bot-backup-v1/.env .env
        elif [ -f "env.example" ]; then
            print_warning "–°—Ç–≤–æ—Ä—é—é .env –∑ –ø—Ä–∏–∫–ª–∞–¥—É..."
            cp env.example .env
            print_warning "‚ö†Ô∏è  –£–í–ê–ì–ê: –í—ñ–¥—Ä–µ–¥–∞–≥—É–π—Ç–µ .env —Ñ–∞–π–ª –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏!"
            print_warning "nano .env"
        else
            print_error ".env —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –°—Ç–≤–æ—Ä—ñ—Ç—å –π–æ–≥–æ –≤—Ä—É—á–Ω—É."
            exit 1
        fi
    fi
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–±–æ–≤'—è–∑–∫–æ–≤–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö
    if ! grep -q "TELEGRAM_BOT_TOKEN=" .env || ! grep -q "API_KEY=" .env; then
        print_warning "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤ .env —Ñ–∞–π–ª—ñ"
        print_status "–ü–æ—Ç–æ—á–Ω–∏–π –≤–º—ñ—Å—Ç .env:"
        cat .env | grep -v "TOKEN\|KEY" | head -5
    fi
    
    print_success "–ó–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ"
}

# –ó—É–ø–∏–Ω–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –±–æ—Ç–∞
stop_old_bot() {
    print_status "–ó—É–ø–∏–Ω–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –±–æ—Ç–∞..."
    
    # –ó—É–ø–∏–Ω–∫–∞ –≤—Å—ñ—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤ –±–æ—Ç–∞
    pm2 stop was-contract-bot 2>/dev/null || true
    pm2 stop was-contract-bot-v1 2>/dev/null || true
    pm2 stop was-contract-bot-v2 2>/dev/null || true
    pm2 delete was-contract-bot 2>/dev/null || true
    pm2 delete was-contract-bot-v1 2>/dev/null || true
    pm2 delete was-contract-bot-v2 2>/dev/null || true
    
    print_success "–°—Ç–∞—Ä—ñ –ø—Ä–æ—Ü–µ—Å–∏ –∑—É–ø–∏–Ω–µ–Ω—ñ"
}

# –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞
start_new_bot() {
    print_status "–ó–∞–ø—É—Å–∫ –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ–≥–æ –±–æ—Ç–∞..."
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–∞–π–ª—ñ–≤
    if [ ! -f "bot-optimized.js" ]; then
        print_error "bot-optimized.js –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!"
        exit 1
    fi
    
    if [ ! -f "ecosystem.config.js" ]; then
        print_error "ecosystem.config.js –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!"
        exit 1
    fi
    
    # –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ PM2
    pm2 start ecosystem.config.js --env production
    
    # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó PM2
    pm2 save
    pm2 startup
    
    print_success "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π!"
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É
check_status() {
    print_status "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –±–æ—Ç–∞..."
    
    sleep 3  # –î–∞—î–º–æ —á–∞—Å –Ω–∞ –∑–∞–ø—É—Å–∫
    
    pm2 status was-contract-bot-v2
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ª–æ–≥—ñ–≤
    print_status "–û—Å—Ç–∞–Ω–Ω—ñ 10 —Ä—è–¥–∫—ñ–≤ –ª–æ–≥—ñ–≤:"
    pm2 logs was-contract-bot-v2 --lines 10
    
    print_success "–†–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    echo ""
    print_status "–ö–æ—Ä–∏—Å–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:"
    echo "  pm2 status                    # –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—ñ–≤"
    echo "  pm2 logs was-contract-bot-v2  # –ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–≥—ñ–≤"
    echo "  pm2 restart was-contract-bot-v2  # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"
    echo "  pm2 stop was-contract-bot-v2     # –ó—É–ø–∏–Ω–∫–∞"
    echo "  tail -f logs/bot-\$(date +%Y-%m-%d).log  # –õ–æ–≥–∏ –±–æ—Ç–∞"
}

# –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
main() {
    echo "ü§ñ WAS Contract Bot v2.0 Deployment Script"
    echo "=========================================="
    
    check_environment
    backup_old_version
    install_dependencies
    setup_environment
    stop_old_bot
    start_new_bot
    check_status
    
    print_success "üéâ –†–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    print_status "–ë–æ—Ç –ø—Ä–∞—Ü—é—î –≤ —Ä–µ–∂–∏–º—ñ production –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º"
}

# –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
trap 'print_error "–†–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –ø–µ—Ä–µ—Ä–≤–∞–Ω–æ —á–µ—Ä–µ–∑ –ø–æ–º–∏–ª–∫—É"; exit 1' ERR

# –ó–∞–ø—É—Å–∫
main "$@"
